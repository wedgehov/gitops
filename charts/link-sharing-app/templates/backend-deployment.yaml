apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-backend
  labels:
    app: {{ .Release.Name }}-backend
    # This label is required for the ServiceMonitor to select this Service.
    release: kube-prometheus-stack
spec:
  type: ClusterIP
  # The port must be named for the ServiceMonitor to reference it.
  ports:
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    app: {{ .Release.Name }}-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-backend
  template:
    metadata:
      annotations:
        checksum/config: {{ toYaml .Values | sha256sum }}
      labels:
        app: {{ .Release.Name }}-backend
    spec:
      {{- with .Values.imagePullSecretName }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{- default .Values.imageTag .Values.backend.image.tag | required "An image tag is required. Set either .Values.imageTag or .Values.backend.image.tag" }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        env:
        - name: ConnectionStrings__DefaultConnection
          value: "Host={{ .Release.Name }}-db;Port=5432;Database=$(POSTGRES_DB);Username=$(POSTGRES_USER);Password=$(POSTGRES_PASSWORD)"
        # OTEL configuration to match platform defaults
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://tempo-dev.monitoring.svc.cluster.local:4317"
        - name: OTEL_EXPORTER_OTLP_PROTOCOL
          value: "grpc"
        - name: OTEL_SERVICE_NAME
          value: "link-sharing-app-backend"
        - name: OTEL_TRACES_SAMPLER
          value: "always_on"
        - name: ASPNETCORE_ENVIRONMENT
          value: "{{ .Values.backend.aspnetcoreEnvironment }}"
        envFrom:
        - secretRef:
            name: {{ .Values.database.secretName }}
        ports:
        - containerPort: 8080
        resources:
{{ toYaml .Values.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20


