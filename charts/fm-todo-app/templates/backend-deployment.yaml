apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-backend
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: {{ .Release.Name }}-backend

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-backend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-backend
    spec:
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ required "A value for backend.image.tag is required" .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args:
        - >-
          export ConnectionStrings__DefaultConnection="Host={{ .Release.Name }}-database;Port=5432;Database={{ .Values.database.dbName }};Username={{ .Values.database.user }};Password=${POSTGRES_PASSWORD}";
          exec dotnet backend.dll
        env:
        - name: FrontendOrigin
          value: https://{{ .Values.ingress.host }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secretName }}
              key: {{ .Values.database.passwordKey }}
        ports:
        - containerPort: 8080
        resources:
{{ toYaml .Values.resources | indent 10 }}
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
