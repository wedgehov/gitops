---
# Source: fm-todo-app/templates/network-policy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fm-todo-app-dev-db-access
spec:
  # This policy applies to pods with the 'database' label
  podSelector:
    matchLabels:
      app: fm-todo-app-dev-database
  policyTypes:
  - Ingress
  ingress:
  - from:
    # 1. Only allow traffic from pods with the 'backend' label
    - podSelector:
        matchLabels:
          app: fm-todo-app-dev-backend
    ports:
    # 2. Only allow traffic on the PostgreSQL port
    - protocol: TCP
      port: 5432
---
# Source: fm-todo-app/templates/backend-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: fm-todo-app-dev-backend
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: fm-todo-app-dev-backend
---
# Source: fm-todo-app/templates/database-statefulset.yaml
apiVersion: v1
kind: Service
metadata:
  name: fm-todo-app-dev-database
spec:
  ports:
    - port: 5432
  clusterIP: None
  selector:
    app: fm-todo-app-dev-database
---
# Source: fm-todo-app/templates/frontend-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: fm-todo-app-dev-frontend
spec:
  type: ClusterIP
  ports:
    - port: 80
  selector:
    app: fm-todo-app-dev-frontend
---
# Source: fm-todo-app/templates/backend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fm-todo-app-dev-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fm-todo-app-dev-backend
  template:
    metadata:
      labels:
        app: fm-todo-app-dev-backend
    spec:
      containers:
      - name: backend
        image: "ghcr.io/wedgehov/frontend-mentor-todo-app/todo-backend:v1.0.0"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - >-
          export ConnectionStrings__DefaultConnection="Host=fm-todo-app-dev-database;Port=5432;Database=fm_todo_db;Username=fm_todo_user;Password=${POSTGRES_PASSWORD}";
          exec dotnet backend.dll
        env:
        - name: FrontendOrigin
          value: https://fm-todo-app-dev.serit.dev
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fm-todo-app-db-secret
              key: postgres-password
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
---
# Source: fm-todo-app/templates/frontend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fm-todo-app-dev-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fm-todo-app-dev-frontend
  template:
    metadata:
      labels:
        app: fm-todo-app-dev-frontend
    spec:
      containers:
      - name: frontend
        image: "ghcr.io/wedgehov/frontend-mentor-todo-app/todo-frontend:v1.0.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: API_URL
          # This is only used to satisfy the NGINX startup script in the container.
          value: "http://fm-todo-app-dev-backend"
        ports:
        - containerPort: 80
---
# Source: fm-todo-app/templates/database-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fm-todo-app-dev-database
spec:
  serviceName: fm-todo-app-dev-database
  replicas: 1
  selector:
    matchLabels:
      app: fm-todo-app-dev-database
  template:
    metadata:
      labels:
        app: fm-todo-app-dev-database
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: database
        image: "postgres:16"
        env:
        - name: POSTGRES_USER
          value: "fm_todo_user"
        - name: POSTGRES_DB
          value: "fm_todo_db"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fm-todo-app-db-secret
              key: postgres-password
        ports:
        - containerPort: 5432
          name: postgres
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: db-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: nutanix-volume
      resources:
        requests:
          storage: 1Gi
---
# Source: fm-todo-app/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fm-todo-app-dev-fm-todo-app-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: "fm-todo-app-dev.serit.dev"
    http:
      paths:
      # Route API traffic to the backend service
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: fm-todo-app-dev-backend
            port:
              number: 80
      # Route all other traffic (the root path) to the frontend service
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fm-todo-app-dev-frontend
            port:
              number: 80
