# Overrides for the grafana helm chart for the 'dev' environment

# Reference the manually created secret for the admin password
admin:
  existingSecret: grafana-admin-secret
  passwordKey: admin-password

ingress:
  enabled: true
  ingressClassName: nginx
  hosts:
    - grafana-dev.serit.dev

# Configure Grafana's settings via the grafana.ini file
grafana.ini:
  auth:
    # Enable anonymous access
    anonymous:
      enabled: true
      org_name: Main Org.
      org_role: Viewer
    # Disable the login form for anonymous users to create a cleaner public view
    disable_login_form: true
  # Set the default home dashboard
  dashboards:
    # This path corresponds to the 'Kubernetes / Compute Resources / Cluster' dashboard
    # that will be automatically discovered from the kube-prometheus-stack.
    default_home_dashboard_path: /var/lib/grafana/dashboards/default/k8s-compute-resources-cluster.json

# Define dashboards declaratively. Grafana will automatically load them.
dashboards:
  default: {} # We are now discovering dashboards, so this can be empty.

# Configure a sidecar to discover dashboards from ConfigMaps
sidecar:
  dashboards:
    enabled: true
    # Search for dashboard ConfigMaps in the 'monitoring' namespace
    searchNamespace: "monitoring"
    # The label that the kube-prometheus-stack chart uses for its dashboards
    label: grafana_dashboard
    labelValue: "1"

# Define data sources declaratively
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      # The URL for the Prometheus service created by the kube-prometheus-stack chart
      url: http://prometheus-stack-kube-prometheus-prometheus.monitoring.svc:9090
      access: proxy
      isDefault: true